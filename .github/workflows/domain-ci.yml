name: Domain CI

on:
  push:
    branches: [main]
    paths:
      - 'domain/**'
      - '.github/workflows/domain-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'domain/**'
      - '.github/workflows/domain-ci.yml'

env:
  MIX_ENV: test
  ELIXIR_VERSION: '1.18'
  OTP_VERSION: '27.0'

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ['1.18']
        otp: ['27.0']

    defaults:
      run:
        working-directory: domain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            domain/deps
            domain/_build
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('domain/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile dependencies
        run: mix deps.compile

      - name: Check formatting
        run: mix format --check-formatted

      - name: Check for unused dependencies
        run: mix deps.unlock --check-unused

      - name: Compile with warnings as errors
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test

      - name: Run Credo
        run: mix credo --strict

      - name: Restore PLT cache
        uses: actions/cache@v4
        id: plt-cache
        with:
          path: domain/priv/plts
          key: ${{ runner.os }}-plt-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('domain/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Run Dialyzer
        run: mix dialyzer

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: domain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            domain/deps
            domain/_build
          key: ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('domain/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Run tests with coverage
        run: mix coveralls.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: domain/cover/
          retention-days: 7
